
sections:
- name: Activity knowledge
  topics:

  - id: occurrences
    name: Occurrences
    icon: fa-car-crash
  
  - id: participation
    name: Participation
    icon: fa-people-carry
  
  - id: action_structure
    name: Structure
    icon: fa-sitemap
  
  - id: action_trans
    name: Transformation
    icon: fa-random
  
  - id: concept
    name: Conceptualization
    icon: fa-object-group
  
  - id: context
    name: Contextualization
    icon: fa-expand

- name: Environment knowledge
  topics:
  
  - id: appearance
    name: Appearance
    icon: fa-shapes
  
  - id: env_structure
    name: Structure
    icon: fa-sitemap
  
  - id: env_kin
    name: Kinematics
    icon: fa-running
  
  - id: env_dyn
    name: Dynamics
    icon: fa-fill-drip
  
  - id: env_phy
    name: Naive physics
    icon: fa-utensils

- name: Agent knowledge
  topics:
  
  - id: agent_structure
    name: Structure
    icon: fa-sitemap
  
  - id: agent_kin
    name: Kinematics
    icon: fa-running

#################
######## ACTION
######## Occurrences
#################
sub_topics:
- topic: occurrences
  name: Events
  description: About occurrences of events in an episode.
  query_groups:
  - description: Which events occurred?
    queries:
    - occurs(Evt)
  - description: When did events occur?
    queries:
    - occurs(Evt) during [Begin,End]
    binding:
      var: Evt
      type: event
      description: When did this event occur?
  - description: When did the first event start?
    queries:
    - |
      findall([Begin,Evt],
        occurs(Evt) during [Begin,_],
        StartTimes),
      min_member([MinTime,FirstEvt],StartTimes).
  - description: When did the last event end?
    queries:
    - |
      findall([Begin,Evt],
        occurs(Evt) during [Begin,_],
        EndTimes),
      max_member([MaxTime,LastEvt],EndTimes).

- topic: occurrences
  name: Duration
  description: About the length of events that occured in an episode.
  query_groups:
  - description: What is the duration of events that occurred?
    queries:
    - |
      occurs(Evt) during [Begin,End],
      Duration is End - Begin.
    binding:
      var: Evt
      type: event
      description: What is the duration of this event?
  - description: What is the longest event that occurred?
    queries:
    - |
      findall([Duration,Evt],
        (  occurs(Evt) during [Begin,End],
           Duration is End - Begin
        ),
        Durations),
      max_member([MaxDuration,LongestEvt],Durations).
  - description: What is the shortest event that occurred?
    queries:
    - |
      findall([Duration,Evt],
        (  occurs(Evt) during [Begin,End],
           Duration is End - Begin
        ),
        Durations),
      min_member([MinDuration,ShortestEvt],Durations).

# TODO: enable this section. But I think it won't work at the moment
#       for non-grounded vars.
#       probably we could implement the relations in aggregate queries!
#- topic: occurrences
#  name: Interval Algebra
#  description: About temporal relationships that hold between events.
#  query_groups:
#  - description: Which events are started by others?
#    queries:
#    - interval_starts(Evt1,Evt2)
#  - description: Which events are stopped by others?
#    queries:
#    - interval_stops(Evt1,Evt2)
#  - description: Which events overlap each other?
#    queries:
#    - interval_overlaps(Evt1,Evt2)
#  - description: Which events occur before others?
#    queries:
#    - interval_before(Evt1,Evt2)
#  - description: Which events occur during others?
#    queries:
#    - interval_during(Evt1,Evt2)

#################
######## ACTION
######## Participation
#################
- topic: participation
  name: Events
  description: About the participation of objects in events.
  query_groups:
  - description: Which objects participate in which action?
    queries:
    - has_participant(Evt,Obj)
    binding:
      var: Evt
      type: event
      description: What are the participants of this event?
    binding:
      var: Obj
      type: object
      description: In which events did this object participate?
  - description: What is the list of participants for each event?
    queries:
    - |
      is_action(Act),
      findall(Obj,
      	has_participant(Act,Obj),
      	Participants)

- topic: participation
  name: Object Types
  description: About the the types of objects that participate in events.
  query_groups:
  - description: What agent participated in events?
    queries:
    - |
      has_participant(Evt,Obj),
      is_agent(Obj)
  - description: What physical artifacts participated in events?
    queries:
    - |
      has_participant(Evt,Obj),
      is_physical_artifact(Obj)

#################
######## ACTION
######## Structure
#################
- topic: action_structure
  name: Action Phases
  description: About how actions are composed into distinct phases.
  query_groups:
  - description: What are the direct sub-events of an action?
    queries:
    - |
      is_action(Act),
      findall(Sub,
      	triple(Act,dul:hasConstituent,Sub),
      	Phases).
    binding:
      var: Act
      type: event
      description: What are the direct phases of this event?
  - description: What is the transitive sub-event closure of an action?
    queries:
    - |
      is_action(Act),
      findall(Sub,
      	transitive(triple(Act,dul:hasConstituent,Sub)),
      	Phases).
    binding:
      var: Act
      type: event
      description: What is the transitive sub-event closure of this event?

#################
######## ACTION
######## Transformation
#################
- topic: action_trans
  name: Coming Soon
  #name: Agent transform
  #description: About how action cause transformations of objects.
  #query_groups:
  #- description: lorem ipsum
  #  queries:
  #  - |
  #    fail.

#################
######## ACTION
######## Conceptualization
#################
- topic: concept
  name: Tasks
  description: About the tasks executed by an action.
  query_groups:
  - description: Which actions execute a navigation task?
    queries:
    - |
      has_type(Tsk, soma:'Navigating'),
      executes_task(Act, Tsk).
  - description: Which actions execute a grasping task?
    queries:
    - |
      has_type(Tsk, soma:'Grasping'),
      executes_task(Act, Tsk).

- topic: concept
  name: Roles
  description: About the roles that object play in an action.
  query_groups:
  - description: What objects play the role of an agent?
    queries:
    - |
      has_type(Role, soma:'AgentRole'),
      has_role(Obj, Role),
      task_role(Tsk, Role),
      executes_task(Act, Tsk).
  - description: What objects play the role of an item?
    queries:
    - |
      has_type(Role, soma:'Item'),
      has_role(Obj, Role),
      task_role(Tsk, Role),
      executes_task(Act, Tsk).
  #- description: What objects play the role of an instrument?
  #  queries:
  #  - |
  #    has_role(Obj, Role, soma:'Instrument'),
  #    task_role(Tsk, Role),
  #    executes_task(Act, Tsk).
  - description: Did an arm play a role in an action?
    queries:
    - |
      has_type(Arm, soma:'Arm').
      has_role(Arm, Role),
      task_role(Tsk, Role),
      executes_task(Act, Tsk).

#################
######## ACTION
######## Contextualization
#################
- topic: context
  name: Situations
  description: About the situational context in which an episode took place.
  query_groups:
  - description: Which episodes are contained in the NEEM?
    queries:
    - is_episode(Ep).
  - description: What are the agents included in episodes?
    queries:
    - |
      triple(Ep,dul:includesAgent,Agent).
  - description: How many actions were executed during the episode?
    queries:
    - |
      is_episode(Ep),
      setof(Act,
        (  triple(Ep,dul:includesAction,SupAct),
           transitive(triple(
               SupAct,dul:hasConstituent,Act))
        ),
        SetOfAct),
      length(SetOfAct,NumAct).

#################
######## OBJECT
######## Appearance
#################
- topic: appearance
  name: Shapes
  description: About the shape quality of objects.
  query_groups:
  - description: What is the shape of objects?
    queries:
    - object_shape(Obj, Shape, _, _).
    binding:
      var: Obj
      type: object
      description: What is the shape of this object?
  - description: What are the shapes of the objects that participate in an action?
    queries:
    - |
      has_participant(Act, Obj), 
      is_object(Obj), 
      object_shape(Obj, ShapeTerm, _, _).

#################
######## OBJECT
######## Structure
#################
- topic: env_structure
  name: Components
  description: About how objects in the environment are composed of components.
  query_groups:
  - description: What are the direct parts of an object?
    queries:
    - |
      is_physical_artifact(Obj),
      findall(Sub,
        triple(Obj,dul:hasComponent,Sub),
        Components).
    binding:
      var: Obj
      type: object
      description: What are the direct components of this object?
  - description: What is the transitive sub-event closure of an action?
    queries:
    - |
      is_physical_artifact(Obj),
      findall(Sub,
        transitive(triple(Obj,dul:hasComponent,Sub)),
        Components).
    binding:
      var: Obj
      type: object
      description: What is the transitive component closure of this object?

#################
######## OBJECT
######## Kinematics
#################
- topic: env_kin
  name: Links
  description: Links without parent- or childlinks
  query_groups:
  - description: What is the root link of the kitchen?
    queries:
    - |
      is_urdf_link(Link),
      urdf_root_link(Link, Root).
  - description: What are the lowest level links of the kitchen?
    queries:
    - |
      is_urdf_link(Link),
      \+has_child_link(Link,_).

#################
######## OBJECT
######## Kinematics
#################
- topic: env_kin
  name: Joints
  description: Structure of joints
  query_groups:
  - description: What are the joints of the kitchen?
    queries:
    - |
      has_type(Kitchen,knowrob:'IAIKitchen'),
      urdf_joint_names(Kitchen,Joints).
  - description: Which joints can be moved?
    queries:
    - |
      has_type(Kitchen,knowrob:'IAIKitchen'), 
      urdf_joint_names(Kitchen,JointList), 
      member(Joint,JointList), 
      urdf_joint_hard_limits(Kitchen,Joint,_,_,_).

#################
######## OBJECT
######## Dynamics
#################
- topic: env_dyn
  name: Coming Soon
  # TODO:
  #- description: How much effort is needed to open doors in the environment?

#################
######## OBJECT
######## Naive physics
#################
- topic: env_phy
  name: Coming soon
  # TODO:
  #- description: What objects can be used as container?
  #- description: Where can this item be parked?

#################
######## AGENT
######## Structure
#################
- topic: agent_structure
  name: Components
  description: About how agents are composed of components.
  query_groups:
  - description: What are the direct parts of an agent?
    queries:
    - |
      is_agent(Agent),
      setof(Part,
        triple(Agent,dul:hasComponent,Part),
        Components).
  - description: What is the transitive component closure of an agent?
    queries:
    - |
      is_agent(Agent),
      setof(Part,
        transitive(triple(Obj,dul:hasComponent,Part)),
        Components).
  - description: How many parts does the agent have?
    queries:
    - |
      is_agent(Agent),
      setof(Part,
        transitive(triple(Obj,dul:hasComponent,Part)),
        Components),
      length(Components,NumParts).
  # TODO:
  #- description: How many sensors does the agent have?
  #- description: What are the actuators of the agent?

#################
######## AGENT
######## Kinematics
#################
- topic: agent_kin
  name: Links
  description: Links of the robot
  query_groups:
  - description: What is the root link of the robot?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_root_link(Robot, Root).
  - description: What is the inertia and mass of the links of the robot?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_link_names(Robot,LinkList),
      member(Link,LinkList),
      urdf_link_inertial(Robot, Link, Inertia, _, Mass).

- topic: agent_kin
  name: Joints
  description: Links of the robot
  query_groups:
  - description: What are the limits of the robot's joints?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_joint_names(Robot,JointList),
      member(Joint,JointList),
      urdf_joint_hard_limits(Robot,Joint,PosLimits,VelMax,EffMax).
  - description: What is the friction of the robot's joints?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_joint_names(Robot,JointList),
      member(Joint,JointList),
      urdf_joint_friction(Robot,Joint,Friction).

