
sections:
- name: Activity knowledge
  topics:

  - id: occurrences
    name: Occurrences
    icon: fa-car-crash
  
  - id: participation
    name: Participation
    icon: fa-people-carry
  
  - id: action_structure
    name: Structure
    icon: fa-sitemap
  
  - id: action_trans
    name: Transformation
    icon: fa-random
  
  - id: concept
    name: Conceptualization
    icon: fa-object-group
  
  - id: context
    name: Contextualization
    icon: fa-expand

- name: Environment knowledge
  topics:
  
  - id: appearance
    name: Appearance
    icon: fa-shapes
  
  - id: env_structure
    name: Structure
    icon: fa-sitemap
  
  - id: env_kin
    name: Kinematics
    icon: fa-running
  
  - id: env_dyn
    name: Dynamics
    icon: fa-fill-drip
  
  - id: env_phy
    name: Naive physics
    icon: fa-utensils

- name: Agent knowledge
  topics:
  
  - id: agent_structure
    name: Structure
    icon: fa-sitemap
  
  - id: agent_kin
    name: Kinematics
    icon: fa-running

sub_topics:
- topic: occurrences
  name: Events
  description: About occurrences of events in an episode.
  query_groups:
  - description: Which events occurred?
    queries:
    - occurs(Evt)
  - description: When did events occur?
    queries:
    - occurs(Evt) during [Begin,End]
    binding:
      var: Evt
      type: event
      description: When did this event occur?
  - description: When did the first event start?
    queries:
    - |
      findall([Begin,Evt],
        occurs(Evt) during [Begin,_],
        StartTimes),
      min_member([MinTime,FirstEvt],StartTimes).
  - description: When did the last event end?
    queries:
    - |
      findall([Begin,Evt],
        occurs(Evt) during [Begin,_],
        EndTimes),
      max_member([MaxTime,LastEvt],EndTimes).

- topic: occurrences
  name: Duration
  description: About the length of events that occured in an episode.
  query_groups:
  - description: What is the duration of events that occurred?
    queries:
    - has_duration(Evt,Duration)
    binding:
      var: Evt
      type: event
      description: What is the duration of this event?
  - description: What is the longest event that occurred?
    queries:
    - |
      findall([Duration,Evt],
        has_duration(Evt,Duration),
        Durations),
      max_member([MaxDuration,LongestEvt],Durations).
  - description: What is the shortest event that occurred?
    queries:
    - |
      findall([Duration,Evt],
        has_duration(Evt,Duration),
        Durations),
      min_member([MinDuration,ShortestEvt],Durations).

- topic: occurrences
  name: Interval Algebra
  description: About temporal relationships that hold between events.
  query_groups:
  - description: Which events are started by others?
    queries:
    - interval_starts(Evt1,Evt2)
  - description: Which events are stopped by others?
    queries:
    - interval_stops(Evt1,Evt2)
  - description: Which events overlap each other?
    queries:
    - interval_overlaps(Evt1,Evt2)
  - description: Which events occur before others?
    queries:
    - interval_before(Evt1,Evt2)
  - description: Which events occur during others?
    queries:
    - interval_during(Evt1,Evt2)

- topic: participation
  name: Agents
  description: Agents that participate in an action
  query_groups:
  - description: Which agents participate in an action?
    queries:
    - |
      has_participant(Act,Part),
      has_role(Part,soma:'AgentRole').
  - description: Which actions have the PR2 as an agent?
    queries:
    - |
      has_participant(Act,Part),
      has_role(Part,soma:'AgentRole'),
      has_type(Part,knowrob:'PR2').

- topic: participation
  name: Objects
  description: Objects that participate in an action
  query_groups:
  - description: Which objects participate in an action?
    queries:
    - |
      has_participant(Act,Part),
      has_role(Part,soma:'Item').
  - description: Which actions have a bowl as an participating item?
    queries:
    - |
      has_participant(Act,Part),
      has_role(Part,soma:'Item'),has_type(Part,soma:'Bowl').

- topic: participation
  name: Component
  description: Components that participate in an action
  query_groups:
  - description: Which objects are used as instruments in an action?
    queries:
    - |
      has_participant(Act,Part),
      has_role(Part,soma:'Instrument').
  - description: Which arms execute a task in an action?
    queries:
    - |
      has_participant(Act,Part),
      has_role(Part,soma:'Instrument'),
      has_type(Part,soma:'Arm').

- topic: action_structure
  name: Top- or bottom-level actions
  description: Actions without parent- or sub-actions
  query_groups:
  - description: Which actions don't have parent-actions?
    queries:
    - |
      is_action(Action),
      \+has_subevent(Parent,Action).
  - description: What actions don't have sub-actions?
    queries:
    - |
      is_action(Action),
      \+has_subevent(Action,Subevent).

- topic: action_trans
  name: Agent transform
  description: Transformation of agents or their parts during actions
  query_groups:
  - description: What is the transform of the gripper during a grasping motion?
    queries:
    - |
      is_classified_by(Act,Mot), 
      has_type(Mot,soma:'GraspingMotion'), 
      is_at(pr2:'PR2Gripper_0_L',['map',Pose,Rot]) during Act.

- topic: concept
  name: Actions
  description: Actions are conceptualized by their tasks
  query_groups:
  - description: Which actions execute a navigation task?
    queries:
    - |
      is_action(Act), 
      executes_task(Act,Tsk), 
      has_type(Tsk,soma:'Navigating').
  - description: Which actions execute a grasping task?
    queries:
    - |
      is_action(Act), 
      executes_task(Act,Tsk), 
      has_type(Tsk,soma:'Grasping').

- topic: context
  name: Episode
  description: Actions are contextualized by their episode.
  query_groups:
  - description: Which episodes are contained in the NEEM?
    queries:
    - is_episode(Ep).
  - description: Is this episode executed by a robot?
    queries:
    - |
      is_episode(Ep),
      triple(Ep,dul:includesAction,SupAct),
      triple(SupAct,soma:isPerformedBy,Agent),
      has_type(Agent,urdf:'Robot').
  - description: How many actions were executed during the episode?
    queries:
    - |
      is_episode(Ep),
      triple(Ep,dul:includesAction,SupAct),
      setof(Act,
        transitive(triple(SupAct,dul:hasConstituent,Act)),
        SetOfAct),
      length(SetOfAct,NumAct).


- topic: appearance
  name: Shapes
  description: Shapes of obects in the environment
  query_groups:
  - description: What are the shapes of the objects in the episode?
    queries:
    - |
      is_object(Obj),
      object_shape_type(Obj,Shape).
  - description: What are the shapes of the objects that participate in an action?
    queries:
    - |
      has_participant(Act, Obj), 
      is_object(Obj), 
      object_shape(Obj, ShapeTerm, ShapeOrigin, MaterialTerm).

- topic: env_structure
  name: Furniture
  description: Structure of the furniture
  query_groups:
  - description: What are the parts of a kitchen?
    queries:
    - |
      has_type(Kitchen,knowrob:'IAIKitchen'),
      has_part(Kitchen,Part).
  - description: What are the parts of the fridge?
    queries:
    - |
      has_type(Fridge,soma:'Refrigerator'),
      has_part(Fridge,Part).

- topic: env_kin
  name: Links
  description: Links without parent- or childlinks
  query_groups:
  - description: What is the root link of the kitchen?
    queries:
    - |
      is_urdf_link(Link),
      urdf_root_link(Link, Root).
  - description: What are the lowest level links of the kitchen?
    queries:
    - |
      is_urdf_link(Link),
      \+has_child_link(Link,_).

- topic: env_kin
  name: Joints
  description: Structure of joints
  query_groups:
  - description: What are the joints of the kitchen?
    queries:
    - |
      has_type(Kitchen,knowrob:'IAIKitchen'),
      urdf_joint_names(Kitchen,Joints).
  - description: Which joints can be moved?
    queries:
    - |
      has_type(Kitchen,knowrob:'IAIKitchen'), 
      urdf_joint_names(Kitchen,JointList), 
      member(Joint,JointList), 
      urdf_joint_hard_limits(Kitchen,Joint,_,_,_).

- topic: env_dyn
  name: Coming Soon

- topic: env_phy
  name: Coming soon

- topic: agent_structure
  name: Robot
  description: Structure of the robot
  query_groups:
  - description: What are the parts of the robot?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      has_part(Robot,Part).
  - description: How many parts does the robot have?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      setof(Part,
        has_part(Robot,Part),
        SetOfParts),
      length(SetOfParts,NumOfParts).

- topic: agent_kin
  name: Links
  description: Links of the robot
  query_groups:
  - description: What is the root link of the robot?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_root_link(Robot, Root).
  - description: What is the inertia and mass of the links of the robot?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_link_names(Robot,LinkList),
      member(Link,LinkList),
      urdf_link_inertial(Robot, Link, Inertia, _, Mass).

- topic: agent_kin
  name: Joints
  description: Links of the robot
  query_groups:
  - description: What are the limits of the robot's joints?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_joint_names(Robot,JointList),
      member(Joint,JointList),
      urdf_joint_hard_limits(Robot,Joint,PosLimits,VelMax,EffMax).
  - description: What is the friction of the robot's joints?
    queries:
    - |
      has_type(Robot,urdf:'Robot'),
      urdf_joint_names(Robot,JointList),
      member(Joint,JointList),
      urdf_joint_friction(Robot,Joint,Friction).

